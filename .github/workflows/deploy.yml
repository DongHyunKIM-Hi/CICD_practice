name: CI/CD with SSH (No Docker)

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      # ✅ 1. 코드 가져오기
      - name: Checkout source
        uses: actions/checkout@v3

      # ✅ 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # ✅ 3. Gradle 빌드 (JAR 생성)
      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      # ✅ 4. 빌드된 JAR 확인 (디버깅용, 나중에 삭제 가능)
      - name: Debug JAR path
        run: ls -l build/libs

      # ✅ 5. EC2에 배포 디렉터리 생성
      - name: Prepare app directory on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: mkdir -p /home/ubuntu/app

      # ✅ 6. JAR 업로드 (파일명 패턴으로 안전하게)
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"

      # ✅ 7. EC2에서 기존 앱 종료 후 새 버전 실행
      - name: Run app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            pkill -f myapp.jar || true
            mv *.jar myapp.jar
            nohup java -jar myapp.jar > app.log 2>&1 &
